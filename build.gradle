plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'yyytir777'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //JDBC
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // h2 database
    testImplementation 'com.h2database:h2'

    // GeoIp2
    implementation group: 'com.maxmind.geoip2', name: 'geoip2', version: '2.15.0'

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

configurations.configureEach {
    exclude group: 'commons-logging', module: 'commons-logging'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}